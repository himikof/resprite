name: CI

on:
  push:
    branches: [main, ci-test]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Build and test
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
        features:
          # - "--no-default-features"
          - ""
          - "--all-features"
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-22.04
          - target: x86_64-unknown-linux-musl
            os: ubuntu-22.04
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
          targets: ${{ matrix.target }}
      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ matrix.features == '--all-features' }}
      - name: Run cargo test
        run: cargo test --release --target ${{ matrix.target }} ${{ matrix.features }}
      - name: Run clippy
        uses: actions-rs-plus/clippy-check@02fcef91666c1f7a6d82c05da66378898a34d79f
        with:
          args: --release --target ${{ matrix.target }} ${{ matrix.features }}
      - name: Run cargo build
        run: cargo build --release --target ${{ matrix.target }} ${{ matrix.features }}
      - name: Upload build artifact
        if: matrix.features == ''
        uses: actions/upload-artifact@v3
        with:
          name: binary-${{ matrix.target }}
          path: ./target/${{ matrix.target }}/release/resprite${{ startsWith(matrix.os, 'windows-') && '.exe' || '' }}
          if-no-files-found: error
